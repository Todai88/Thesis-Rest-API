// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gRPC.proto

/*
Package gRPC is a generated protocol buffer package.

It is generated from these files:
	gRPC.proto

It has these top-level messages:
	User
	Message
*/
package gRPC

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Id   int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Message struct {
	Sender   *User  `protobuf:"bytes,1,opt,name=sender" json:"sender,omitempty"`
	Receiver *User  `protobuf:"bytes,2,opt,name=receiver" json:"receiver,omitempty"`
	Message  string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Message) GetSender() *User {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Message) GetReceiver() *User {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "gRPC.User")
	proto.RegisterType((*Message)(nil), "gRPC.Message")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GRPC service

type GRPCClient interface {
	EstablishBidiConnection(ctx context.Context, opts ...grpc.CallOption) (GRPC_EstablishBidiConnectionClient, error)
}

type gRPCClient struct {
	cc *grpc.ClientConn
}

func NewGRPCClient(cc *grpc.ClientConn) GRPCClient {
	return &gRPCClient{cc}
}

func (c *gRPCClient) EstablishBidiConnection(ctx context.Context, opts ...grpc.CallOption) (GRPC_EstablishBidiConnectionClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_GRPC_serviceDesc.Streams[0], c.cc, "/gRPC.gRPC/EstablishBidiConnection", opts...)
	if err != nil {
		return nil, err
	}
	x := &gRPCEstablishBidiConnectionClient{stream}
	return x, nil
}

type GRPC_EstablishBidiConnectionClient interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type gRPCEstablishBidiConnectionClient struct {
	grpc.ClientStream
}

func (x *gRPCEstablishBidiConnectionClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gRPCEstablishBidiConnectionClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for GRPC service

type GRPCServer interface {
	EstablishBidiConnection(GRPC_EstablishBidiConnectionServer) error
}

func RegisterGRPCServer(s *grpc.Server, srv GRPCServer) {
	s.RegisterService(&_GRPC_serviceDesc, srv)
}

func _GRPC_EstablishBidiConnection_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GRPCServer).EstablishBidiConnection(&gRPCEstablishBidiConnectionServer{stream})
}

type GRPC_EstablishBidiConnectionServer interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type gRPCEstablishBidiConnectionServer struct {
	grpc.ServerStream
}

func (x *gRPCEstablishBidiConnectionServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gRPCEstablishBidiConnectionServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gRPC.gRPC",
	HandlerType: (*GRPCServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EstablishBidiConnection",
			Handler:       _GRPC_EstablishBidiConnection_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "gRPC.proto",
}

func init() { proto.RegisterFile("gRPC.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x41, 0x6b, 0x84, 0x30,
	0x10, 0x85, 0x89, 0xb5, 0xda, 0x4e, 0xa9, 0x87, 0xb9, 0x34, 0xf4, 0x24, 0x1e, 0x8a, 0xf4, 0x20,
	0xc5, 0x1e, 0x7b, 0x53, 0x7a, 0x2c, 0x48, 0xa0, 0x3f, 0x40, 0xcd, 0x60, 0x03, 0x35, 0x59, 0x12,
	0xd9, 0xdf, 0xbf, 0x38, 0xba, 0x0b, 0x5e, 0xc2, 0x7b, 0xbc, 0xcc, 0x37, 0x6f, 0x00, 0x26, 0xd5,
	0xb5, 0xd5, 0xc9, 0xbb, 0xc5, 0x61, 0xbc, 0xea, 0xe2, 0x1d, 0xe2, 0xdf, 0x40, 0x1e, 0x33, 0x88,
	0x8c, 0x96, 0x22, 0x17, 0xe5, 0xbd, 0x8a, 0x8c, 0x46, 0x84, 0xd8, 0xf6, 0x33, 0xc9, 0x28, 0x17,
	0xe5, 0xa3, 0x62, 0x5d, 0x38, 0x48, 0x7f, 0x28, 0x84, 0x7e, 0x22, 0x2c, 0x20, 0x09, 0x64, 0x35,
	0x79, 0x1e, 0x79, 0xaa, 0xa1, 0x62, 0xf2, 0x8a, 0x52, 0x7b, 0x82, 0x6f, 0xf0, 0xe0, 0x69, 0x24,
	0x73, 0x26, 0xcf, 0x98, 0xe3, 0xaf, 0x5b, 0x86, 0x12, 0xd2, 0x79, 0xc3, 0xca, 0x3b, 0xde, 0x76,
	0xb5, 0x75, 0x0b, 0x5c, 0x12, 0xbf, 0xe0, 0xe5, 0x3b, 0x2c, 0xfd, 0xf0, 0x6f, 0xc2, 0x5f, 0x63,
	0xb4, 0x69, 0x9d, 0xb5, 0x34, 0x2e, 0xc6, 0x59, 0x7c, 0xde, 0x90, 0x7b, 0xaf, 0xd7, 0xa3, 0x2d,
	0xc5, 0x87, 0x68, 0xb2, 0x0d, 0xd2, 0xf0, 0xdb, 0x89, 0x21, 0xe1, 0xf3, 0x3f, 0x2f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xdb, 0xc4, 0xee, 0x80, 0x0c, 0x01, 0x00, 0x00,
}
